{"ast":null,"code":"var _jsxFileName = \"/home/kir/Dashboard_test/client/src/providers/table_provider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { initialData, initialColumns, sorts } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst context = /*#__PURE__*/createContext({\n  data: [],\n  columns: []\n});\nexport const useTable = () => {\n  _s();\n\n  return useContext(context);\n};\n\n_s(useTable, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const TableProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [columns] = useState(initialColumns);\n  const [data, setData] = useState(initialData);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [activeFilterByPosition, setActiveFilterByPosition] = useState(\"all\");\n  const [activeSortIndex, setActiveSortIndex] = useState(-1);\n  const [activeSortColumn, setActiveSortColumn] = useState(\"data\");\n\n  const handleChangeActiveSort = columnKey => {\n    setActiveSortColumn(columnKey);\n\n    if (activeSortColumn === columnKey) {\n      setActiveSortIndex(activeSortIndex === 1 ? -1 : activeSortIndex + 1);\n      return;\n    }\n\n    setActiveSortIndex(-1);\n  };\n\n  const activeSort = useMemo(() => sorts[activeSortIndex], [activeSortIndex]);\n\n  const _filterElements = (value, filteredData) => {\n    switch (value) {\n      case \"even\":\n        return [...filteredData].filter((_, index) => (index + 1) % 2 === 0);\n\n      case \"odd\":\n        return [...filteredData].filter((_, index) => (index + 1) % 2 !== 0);\n\n      default:\n        return [...filteredData];\n    }\n  };\n\n  const handleChangeFilterByPosition = value => {\n    setActiveFilterByPosition(value);\n\n    const filteredItems = _filterElements(value, activeSortIndex !== -1 && value !== \"all\" ? data : initialData);\n\n    if (activeSortIndex !== -1) {\n      filteredItems.sort(_compare);\n    }\n\n    setData(filteredItems);\n  };\n\n  const _removeActiveFilter = _ref2 => {\n    let {\n      type\n    } = _ref2;\n    const newFilters = [...activeFilters];\n    newFilters.splice(newFilters.findIndex(filter => filter.type === type), 1);\n    setActiveFilters(newFilters);\n  };\n\n  const _editActiveFilter = _ref3 => {\n    let {\n      type,\n      value,\n      editableFilterIndex\n    } = _ref3;\n    const newFilters = [...activeFilters];\n    newFilters.splice(editableFilterIndex, 1, {\n      type,\n      value\n    });\n    setActiveFilters(newFilters);\n  };\n\n  const _getEditableFilterIndex = type => {\n    return activeFilters.findIndex(filter => filter.type === type);\n  };\n\n  const handleChangeFilter = _ref4 => {\n    let {\n      value,\n      type\n    } = _ref4;\n\n    const editableFilterIndex = _getEditableFilterIndex(type);\n\n    if (!(value !== null && value !== void 0 && value.length) && editableFilterIndex) {\n      _removeActiveFilter({\n        type\n      });\n\n      return;\n    }\n\n    if (editableFilterIndex > -1) {\n      _editActiveFilter({\n        value,\n        type,\n        editableFilterIndex\n      });\n\n      return;\n    }\n\n    setActiveFilters([...activeFilters, {\n      type,\n      value\n    }]);\n  };\n\n  useEffect(() => {\n    const filteredData = [...(activeFilterByPosition !== \"all\" ? data : initialData)].filter(item => activeFilters.every(_ref5 => {\n      let {\n        type,\n        value\n      } = _ref5;\n      return item[type].toString().includes(value.toLowerCase());\n    }));\n\n    if (activeSortIndex !== -1) {\n      filteredData.sort(_compare);\n    }\n\n    setData(filteredData);\n  }, [activeFilters, activeSort]);\n\n  const _compare = (a, b) => {\n    if (a[activeSortColumn] < b[activeSortColumn]) return activeSort === \"asc\" ? -1 : 1;\n    if (a[activeSortColumn] > b[activeSortColumn]) return activeSort === \"asc\" ? 1 : -1;\n    return 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: {\n      columns,\n      data,\n      activeFilters,\n      activeFilterByPosition,\n      activeSort,\n      activeSortColumn,\n      handleChangeActiveSort,\n      handleChangeFilterByPosition,\n      handleChangeFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TableProvider, \"seLsOKWyR+UaRdh8BKNfW1wcTg4=\");\n\n_c = TableProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","initialData","initialColumns","sorts","context","data","columns","useTable","TableProvider","children","setData","activeFilters","setActiveFilters","activeFilterByPosition","setActiveFilterByPosition","activeSortIndex","setActiveSortIndex","activeSortColumn","setActiveSortColumn","handleChangeActiveSort","columnKey","activeSort","_filterElements","value","filteredData","filter","_","index","handleChangeFilterByPosition","filteredItems","sort","_compare","_removeActiveFilter","type","newFilters","splice","findIndex","_editActiveFilter","editableFilterIndex","_getEditableFilterIndex","handleChangeFilter","length","item","every","toString","includes","toLowerCase","a","b"],"sources":["/home/kir/Dashboard_test/client/src/providers/table_provider.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { initialData, initialColumns, sorts } from \"../helpers\";\n\nconst context = createContext({\n  data: [],\n  columns: [],\n});\n\nexport const useTable = () => useContext(context);\n\nexport const TableProvider = ({ children }) => {\n  const [columns] = useState(initialColumns);\n  const [data, setData] = useState(initialData);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [activeFilterByPosition, setActiveFilterByPosition] = useState(\"all\");\n  const [activeSortIndex, setActiveSortIndex] = useState(-1);\n  const [activeSortColumn, setActiveSortColumn] = useState(\"data\");\n\n  const handleChangeActiveSort = (columnKey) => {\n    setActiveSortColumn(columnKey);\n\n    if (activeSortColumn === columnKey) {\n      setActiveSortIndex(activeSortIndex === 1 ? -1 : activeSortIndex + 1);\n      return;\n    }\n\n    setActiveSortIndex(-1);\n  };\n\n  const activeSort = useMemo(() => sorts[activeSortIndex], [activeSortIndex]);\n\n  const _filterElements = (value, filteredData) => {\n    switch (value) {\n      case \"even\":\n        return [...filteredData].filter((_, index) => (index + 1) % 2 === 0);\n      case \"odd\":\n        return [...filteredData].filter((_, index) => (index + 1) % 2 !== 0);\n      default:\n        return [...filteredData];\n    }\n  };\n  const handleChangeFilterByPosition = (value) => {\n    setActiveFilterByPosition(value);\n    const filteredItems = _filterElements(\n      value,\n      activeSortIndex !== -1 && value !== \"all\" ? data : initialData\n    );\n\n    if (activeSortIndex !== -1) {\n      filteredItems.sort(_compare);\n    }\n    setData(filteredItems);\n  };\n\n  const _removeActiveFilter = ({ type }) => {\n    const newFilters = [...activeFilters];\n    newFilters.splice(\n      newFilters.findIndex((filter) => filter.type === type),\n      1\n    );\n    setActiveFilters(newFilters);\n  };\n\n  const _editActiveFilter = ({ type, value, editableFilterIndex }) => {\n    const newFilters = [...activeFilters];\n    newFilters.splice(editableFilterIndex, 1, {\n      type,\n      value,\n    });\n    setActiveFilters(newFilters);\n  };\n\n  const _getEditableFilterIndex = (type) => {\n    return activeFilters.findIndex((filter) => filter.type === type);\n  };\n\n  const handleChangeFilter = ({ value, type }) => {\n    const editableFilterIndex = _getEditableFilterIndex(type);\n\n    if (!value?.length && editableFilterIndex) {\n      _removeActiveFilter({ type });\n      return;\n    }\n    if (editableFilterIndex > -1) {\n      _editActiveFilter({ value, type, editableFilterIndex });\n      return;\n    }\n\n    setActiveFilters([...activeFilters, { type, value }]);\n  };\n\n  useEffect(() => {\n    const filteredData = [\n      ...(activeFilterByPosition !== \"all\" ? data : initialData),\n    ].filter((item) =>\n      activeFilters.every(({ type, value }) =>\n        item[type].toString().includes(value.toLowerCase())\n      )\n    );\n    if (activeSortIndex !== -1) {\n      filteredData.sort(_compare);\n    }\n\n    setData(filteredData);\n  }, [activeFilters, activeSort]);\n\n  const _compare = (a, b) => {\n    if (a[activeSortColumn] < b[activeSortColumn])\n      return activeSort === \"asc\" ? -1 : 1;\n    if (a[activeSortColumn] > b[activeSortColumn])\n      return activeSort === \"asc\" ? 1 : -1;\n    return 0;\n  };\n\n  return (\n    <context.Provider\n      value={{\n        columns,\n        data,\n        activeFilters,\n        activeFilterByPosition,\n        activeSort,\n        activeSortColumn,\n        handleChangeActiveSort,\n        handleChangeFilterByPosition,\n        handleChangeFilter,\n      }}\n    >\n      {children}\n    </context.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}